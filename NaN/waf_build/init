#!/usr/bin/env bash

echo Hello!

# TODO Check git, find, python, coreutils and bash

# FIXME check path arithmetic
PROJECT_ROOT=$(realpath $(dirname ${BASH_SOURCE[0]})/..)
WAF_GIT_DIR=$PROJECT_ROOT/waf_build/waf_git
# WAF_GIT_URL='https://gitlab.com/ita1024/waf.git'
WAF_GIT_URL=/home/alekseevt/Playground/waf # DEBUG
WAF_GIT_BRANCH=master
WAF_TOOLS_DIR=$PROJECT_ROOT/waf_build/waf_tools
WAF_EXTRAS_DIR=$PROJECT_ROOT/waf_build/waf_extras
WSCRIPTS_DIR=$PROJECT_ROOT/waf_build/wscripts

FORCE=0
CLEAN=0

for PARAM in $@; do
    case $PARAM in
	-f|--force)
	    FORCE=1
	    ;;
	-c|--clean)
	    CLEAN=1
	    ;;
	-h|--help)
	    echo Help message
	    exit
	    ;;
    esac
done

WSCRIPTS_LIST=

if [[ $FORCE && $CLEAN ]]; then
    echo Clean WAF
    rm -rf $WAF_GIT_DIR/*
fi

if [[ $CLEAN || $FORCE ]]; then
    echo Clean symlinks
    find $PROJECT_ROOT -type l -name wscript -delete
fi

if [[ ! $CLEAN ]]; then
    WSCRIPTS_LIST=$(find $WSCRIPTS_DIR -name wscript)
fi

pushd $WAF_GIT_DIR
if [[ $(git status) ]]; then
    echo Download WAF
    git init # FIXME May be use `git clone` ?
    git remote add -m $WAF_GIT_BRANCH -f origin $WAF_GIT_URL
    pushd waflib/tools
    for TGT in $(ls $WAF_TOOLS_DIR); do
	ln -s $TGT # FIXME This must be releative path
    done
    popd
    pushd waflib/extras
    for TGT in $(ls $WAF_EXTRAS_DIR); do
	ln -s $TGT # FIXME This must be releative path
    done
    popd
fi
popd

for WS in $WSCRIPTS_LIST; do # FIXME May be use `find` ?
    if [[ ! -L ${PROJECT_ROOT}/${WS} ]]; then
	echo Create symlink $WS
	ln -s $WSCRIPTS_DIR/$WS ${PROJECT_ROOT}/${WS} # FIXME This must be releative path
    fi
done

echo Done
